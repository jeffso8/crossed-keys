{
  "{\"sourceRoot\":\"/Users/scottso/protect-ya-neck/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/scottso/protect-ya-neck\",\"filename\":\"/Users/scottso/protect-ya-neck/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/scottso/protect-ya-neck\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/scottso/protect-ya-neck",
      "filename": "/Users/scottso/protect-ya-neck/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/scottso/protect-ya-neck",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/scottso/protect-ya-neck/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/scottso/protect-ya-neck/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _Rooms = _interopRequireDefault(require(\"../models/Rooms\"));\n\nvar _index = _interopRequireDefault(require(\"../database/index\"));\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nvar _utils = require(\"./utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar socketIO = require('socket.io');\n\nvar port = process.env.PORT || 3001;\nvar app = (0, _express[\"default\"])();\n\nvar server = _http[\"default\"].Server(app);\n\nvar io = socketIO(server);\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '../client/build')));\napp.options(\"/*\", function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n  res.sendStatus(200);\n});\napp.all('*', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  next();\n});\n/*\n roomMap: {\n  roomID: {\n    spymasterHints: String[],\n    colors: String[],\n    words: String[],\n    clicked: Boolean[],\n    isRedTurn: Boolean,\n    totalGameScore: [int, int],\n    redScore: int\n    blueScore: int,\n    redSpy: String,\n    blueSpy: String,\n    users: {\n      userID[]: {\n        team: String,\n        role: String,\n        isHost: Boolean,\n      }\n    }\n  }\n }\n*/\n\nvar colors = [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"black\"]; // let interval;\n// app.get('/', (req, res) => {\n//   res.send('Hello World!');\n// });\n\napp.get('/words', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var words;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _utils.getWords)();\n\n          case 2:\n            words = _context.sent;\n            return _context.abrupt(\"return\", res.send(words));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/create-room', function (req, res) {\n  return res.status(200).json({\n    success: true,\n    redirectUrl: \"/\".concat(req.body.roomName)\n  });\n});\napp.get('/game-stats', function (req, res) {\n  _Rooms[\"default\"].findOne({\n    roomID: req.roomID\n  }, function (err, foundRoom) {\n    if (!err) {\n      res.send(foundRoom);\n    } else {\n      console.log(err);\n    }\n  });\n});\nio.on('connection', function (socket) {\n  socket.on('joinRoom', function (data) {\n    //data is an object with the roomID and the user that joined the room\n    socket.join(data.roomID);\n\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (!res) {\n        var newRoom = new _Rooms[\"default\"]({\n          roomID: data.roomID,\n          totalGameScore: [0, 0],\n          users: [{\n            userID: data.userID,\n            team: null,\n            role: null,\n            isHost: true,\n            socketId: socket.id\n          }]\n        });\n        if (err) return;\n        newRoom.save();\n        io[\"in\"](data.roomID).emit('updateTeams', newRoom);\n      } else {\n        var foundUser = res.users.find(function (user) {\n          return user.userID === data.userID;\n        });\n\n        if (!foundUser) {\n          res.users.push({\n            userID: data.userID,\n            team: null,\n            role: null,\n            isHost: false,\n            socketId: socket.id\n          });\n        }\n\n        ;\n        if (err) return;\n        res.markModified('users');\n        res.save();\n        io[\"in\"](data.roomID).emit('updateTeams', res);\n      }\n    });\n  });\n  socket.on('newHint', function (data) {\n    _Rooms[\"default\"].findOneAndUpdate({\n      roomID: data.roomID\n    }, {\n      $addToSet: {\n        hints: {\n          hint: data.hint,\n          hintCount: data.hintCount\n        }\n      }\n    }, {\n      upsert: true,\n      \"new\": true\n    }, function (err, res) {\n      if (err) return;\n      socket.nsp[\"in\"](data.roomID).emit('sendHint', res); //gives data as an object {message: what message was sent, roomId: has the given room id}\n    });\n  });\n  socket.on('getWords', function (data) {\n    _Rooms[\"default\"].findOneAndUpdate({\n      roomID: data.roomID\n    }, {\n      $set: {\n        words: (0, _utils.getWords)()\n      }\n    }, {\n      upsert: true,\n      \"new\": true\n    }, function (err, result) {\n      if (err) return;\n      socket.nsp[\"in\"](data.roomID).emit('sendWords', result);\n    });\n  });\n  socket.on('setRedTeam', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      var foundUser = res.users.find(function (user) {\n        return user.userID === data.userID;\n      });\n      foundUser.team = 'RED';\n      foundUser.role = null;\n\n      if (res.blueSpy == data.userID) {\n        res.blueSpy = null;\n      }\n\n      res.markModified('users', 'blueSpy');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateTeams', res);\n    });\n  });\n  socket.on('setBlueTeam', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      var foundUser = res.users.find(function (user) {\n        return user.userID === data.userID;\n      });\n      foundUser.team = 'BLUE';\n      foundUser.role = null;\n\n      if (res.redSpy == data.userID) {\n        res.redSpy = null;\n      }\n\n      res.markModified('users', 'redSpy');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateTeams', res);\n    });\n  });\n  socket.on('claimSpyMaster', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      var foundUser = res.users.find(function (user) {\n        return user.userID === data.userID;\n      });\n      var prevUser = res.users.find(function (user) {\n        return user.role === \"MASTER\";\n      });\n\n      if (prevUser) {\n        prevUser.role = null;\n      }\n\n      foundUser.role = \"MASTER\";\n\n      if (foundUser.team === \"RED\") {\n        res.redSpy = foundUser.userID;\n      } else if (foundUser.team === \"BLUE\") {\n        res.blueSpy = foundUser.userID;\n      }\n\n      res.markModified('users', 'redSpy', 'blueSpy');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateTeams', res);\n    });\n  });\n  socket.on('joinGame', function (data) {\n    socket.join(data.roomID);\n    socket.userID = data.user.userID;\n    socket.roomID = data.roomID;\n\n    _Rooms[\"default\"].findOneAndUpdate({\n      roomID: data.roomID,\n      'users.userID': data.user.userID\n    }, {\n      $set: {\n        'users.$.socketId': socket.id\n      }\n    }, {\n      upsert: true,\n      \"new\": true\n    }, function (err, res) {\n      if (err) return;\n      socket.nsp[\"in\"](data.roomID).emit('refreshGame', res);\n    });\n  });\n  socket.on('redScoreChange', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n      res.redScore = data.redScore;\n      res.markModified('redScore');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateRedScore', {\n        redScore: res.redScore\n      });\n    });\n  });\n  socket.on('blueScoreChange', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n      res.blueScore = data.blueScore;\n      res.markModified('blueScore');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateBlueScore', {\n        blueScore: res.blueScore\n      });\n    });\n  });\n  socket.on('flipCard', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n      res.clicked[data.index] = true;\n      res.isRedTurn = data.isRedTurn;\n      res.markModified('clicked', 'isRedTurn');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateFlipCard', {\n        isRedTurn: res.isRedTurn,\n        clicked: res.clicked\n      });\n    });\n  });\n  socket.on('updateTurn', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n      res.isRedTurn = data.redTurn;\n      res.markModified('isRedTurn');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('redTurn', {\n        redTurn: res.isRedTurn\n      });\n    });\n  });\n  socket.on('startTimer', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n\n      if (data.currentTimer) {\n        clearInterval(data.currentTimer);\n      }\n\n      var time = 20;\n      var currentTimer = setInterval(function () {\n        if (time === 1) {\n          res.isRedTurn = !res.isRedTurn;\n          res.markModified('isRedTurn');\n          res.save();\n          clearInterval(currentTimer);\n          socket.nsp[\"in\"](data.roomID).emit('redTurn', {\n            redTurn: res.isRedTurn\n          });\n          socket.nsp[\"in\"](data.roomID).emit('timerDone', {\n            roomID: res.roomID\n          });\n        }\n\n        time--;\n        socket.nsp[\"in\"](data.roomID).emit('timer', {\n          time: time,\n          currentTimer: Number(currentTimer)\n        });\n      }, 1000);\n    });\n  });\n  socket.on('gameOver', function (data) {\n    _Rooms[\"default\"].findOne({\n      roomID: data.roomID\n    }, function (err, res) {\n      if (err) return;\n      clearInterval(data.timerID);\n      res.totalGameScore = data.gameScore;\n      res.gameOver = data.gameOver;\n      res.redScore = data.redScore;\n      res.blueScore = data.blueScore;\n      res.markModified('gameScore', 'gameOver', 'redScore', 'blueScore');\n      res.save();\n      socket.nsp[\"in\"](data.roomID).emit('updateGameOver', res);\n    });\n  });\n  socket.on('hostStartGame', function (data) {\n    var colorSorted = colors.sort(function () {\n      return Math.random() - 0.5;\n    });\n    var words = (0, _utils.getWords)();\n    var clicked = new Array(25).fill(false);\n    socket.roomID = data.roomID;\n\n    _Rooms[\"default\"].findOneAndUpdate({\n      roomID: data.roomID\n    }, {\n      $set: {\n        colors: colorSorted,\n        words: words,\n        clicked: clicked,\n        isRedTurn: true,\n        redScore: 8,\n        blueScore: 8,\n        gameOver: false,\n        hints: []\n      }\n    }, {\n      upsert: true,\n      \"new\": true\n    }, function (err, res) {\n      if (err) return;\n      socket.nsp[\"in\"](data.roomID).emit('startGame', res);\n    });\n  });\n  socket.on('disconnect', function () {\n    setTimeout(function () {\n      if (socket.userID && socket.roomID) {\n        console.log('triggered');\n\n        _Rooms[\"default\"].findOne({\n          roomID: socket.roomID\n        }, function (err, res) {\n          if (err) return;\n          var foundUser = res.users.find(function (user) {\n            return user.userID === socket.userID;\n          });\n          var foundUserIdx = res.users.indexOf(foundUser);\n\n          if (foundUser.socketId === socket.id) {\n            var users = res.users;\n            users.splice(foundUserIdx, 1);\n            res.users = users;\n            res.markModified('users');\n            res.save();\n\n            if (res && res.users.length === 0) {\n              console.log('no users left', socket.roomID);\n\n              _Rooms[\"default\"].findOneAndDelete({\n                roomID: socket.roomID\n              }, function (err, res) {\n                if (err) return;\n                console.log(\"Room deleted!\", res);\n              });\n            }\n          }\n        });\n      }\n    }, 5000);\n  });\n}); // Handle React routing, return all requests to React app\n\napp.get('/*', function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, '../client/build', 'index.html'));\n});\nserver.listen(port, function () {\n  return console.log(\"Example app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "socketIO",
        "require",
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "server",
        "http",
        "Server",
        "io",
        "use",
        "express",
        "json",
        "path",
        "join",
        "__dirname",
        "options",
        "req",
        "res",
        "next",
        "header",
        "sendStatus",
        "all",
        "colors",
        "get",
        "words",
        "send",
        "post",
        "status",
        "success",
        "redirectUrl",
        "body",
        "roomName",
        "Rooms",
        "findOne",
        "roomID",
        "err",
        "foundRoom",
        "console",
        "log",
        "on",
        "socket",
        "data",
        "newRoom",
        "totalGameScore",
        "users",
        "userID",
        "team",
        "role",
        "isHost",
        "socketId",
        "id",
        "save",
        "emit",
        "foundUser",
        "find",
        "user",
        "push",
        "markModified",
        "findOneAndUpdate",
        "$addToSet",
        "hints",
        "hint",
        "hintCount",
        "upsert",
        "nsp",
        "$set",
        "result",
        "blueSpy",
        "redSpy",
        "prevUser",
        "redScore",
        "blueScore",
        "clicked",
        "index",
        "isRedTurn",
        "redTurn",
        "currentTimer",
        "clearInterval",
        "time",
        "setInterval",
        "Number",
        "timerID",
        "gameScore",
        "gameOver",
        "colorSorted",
        "sort",
        "Math",
        "random",
        "Array",
        "fill",
        "setTimeout",
        "foundUserIdx",
        "indexOf",
        "splice",
        "length",
        "findOneAndDelete",
        "sendFile",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
      "sourcesContent": [
        "import express from 'express';\nimport http from 'http';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport Rooms from '../models/Rooms';\nimport database from '../database/index';\nimport \"regenerator-runtime/runtime.js\";\nimport {getWords, newUser} from './utils';\nimport path from 'path';\n\nconst socketIO = require('socket.io');\nconst port = process.env.PORT || 3001;\n\nlet app = express();\nlet server = http.Server(app);\nlet io = socketIO(server);\n\n\napp.use(cors());\napp.use(express.json());\napp.use(express.static(path.join(__dirname, '../client/build')));\n\napp.options(\"/*\", function(req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n  res.sendStatus(200);\n});\n\napp.all('*', function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  next();\n});\n\n/*\n roomMap: {\n  roomID: {\n    spymasterHints: String[],\n    colors: String[],\n    words: String[],\n    clicked: Boolean[],\n    isRedTurn: Boolean,\n    totalGameScore: [int, int],\n    redScore: int\n    blueScore: int,\n    redSpy: String,\n    blueSpy: String,\n    users: {\n      userID[]: {\n        team: String,\n        role: String,\n        isHost: Boolean,\n      }\n    }\n  }\n }\n*/\n\nconst colors = [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"blue\", \"blue\", \"blue\", \"blue\",\n\"blue\", \"blue\", \"blue\", \"blue\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"black\"];\n\n// let interval;\n\n// app.get('/', (req, res) => {\n//   res.send('Hello World!');\n// });\n\napp.get('/words', async (req, res) => {\n  const words = await getWords();\n  return res.send(words);\n});\n\napp.post('/create-room', (req, res) => {\n  return res.status(200).json({\n    success: true,\n    redirectUrl: `/${req.body.roomName}`\n  });\n});\n\napp.get('/game-stats', function(req,res){\n  Rooms.findOne({roomID: req.roomID}, function(err, foundRoom) {\n    if (!err) {\n      res.send(foundRoom);\n    } else {\n      console.log(err);\n    }\n    });\n  });\n\nio.on('connection', (socket) => {\n  socket.on('joinRoom', (data) => {\n    //data is an object with the roomID and the user that joined the room\n    socket.join(data.roomID);\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (!res) {\n        const newRoom = new Rooms(\n          {\n            roomID: data.roomID,\n            totalGameScore: [0,0],\n            users: [{\n              userID: data.userID,\n              team: null,\n              role: null,\n              isHost: true,\n              socketId: socket.id\n            }]\n          })\n        if (err) return;\n        newRoom.save();\n        io.in(data.roomID).emit('updateTeams', newRoom);\n      } else {\n      const foundUser = res.users.find(user => user.userID === data.userID);\n      if (!foundUser) {\n      res.users.push({\n        userID: data.userID,\n        team: null,\n        role: null,\n        isHost: false,\n        socketId: socket.id\n      })};\n      if (err) return;\n      res.markModified('users');\n      res.save();\n      io.in(data.roomID).emit('updateTeams', res);\n    }\n    });\n  });\n\n  socket.on('newHint', (data) => {\n    Rooms.findOneAndUpdate({roomID: data.roomID}, {$addToSet: {hints: {hint: data.hint, hintCount: data.hintCount}}}, {upsert: true, new: true}, function(err, res) {\n      if (err) return;\n      socket.nsp.in(data.roomID).emit('sendHint', res);\n    //gives data as an object {message: what message was sent, roomId: has the given room id}\n    });\n  });\n\n  socket.on('getWords', (data) => {\n    Rooms.findOneAndUpdate({roomID: data.roomID}, {$set : {words: getWords()}}, {upsert: true, new: true}, function(err, result) {\n      if (err) return;\n      socket.nsp.in(data.roomID).emit('sendWords', result);\n      })\n  });\n\n  socket.on('setRedTeam', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      const foundUser = res.users.find(user => user.userID === data.userID);\n      foundUser.team = 'RED';\n      foundUser.role = null;\n      if (res.blueSpy == data.userID) {\n        res.blueSpy = null;\n      }\n      res.markModified('users', 'blueSpy');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateTeams', res);\n    })\n  });\n\n  socket.on('setBlueTeam', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      const foundUser = res.users.find(user => user.userID === data.userID);\n      foundUser.team = 'BLUE';\n      foundUser.role = null;\n      if (res.redSpy == data.userID) {\n        res.redSpy = null;\n      }\n      res.markModified('users', 'redSpy');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateTeams', res);\n    });\n  });\n\n  socket.on('claimSpyMaster', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      const foundUser = res.users.find(user => user.userID === data.userID);\n      const prevUser = res.users.find(user => user.role === \"MASTER\");\n      if (prevUser) {\n        prevUser.role = null;\n      }\n      foundUser.role = \"MASTER\";\n      if (foundUser.team === \"RED\") {\n        res.redSpy = foundUser.userID;\n      } else if (foundUser.team === \"BLUE\") {\n        res.blueSpy = foundUser.userID;\n      }\n      res.markModified('users', 'redSpy', 'blueSpy');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateTeams', res);\n    });\n  });\n\n  socket.on('joinGame', (data) => {\n    socket.join(data.roomID);\n    socket.userID = data.user.userID;\n    socket.roomID = data.roomID;\n    Rooms.findOneAndUpdate({roomID: data.roomID, 'users.userID': data.user.userID}, {$set : {'users.$.socketId': socket.id}}, {upsert: true, new: true},  function(err, res) {\n      if (err) return;\n      socket.nsp.in(data.roomID).emit('refreshGame', res);\n    })\n  });\n\n  socket.on('redScoreChange', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (err) return;\n        res.redScore = data.redScore;\n        res.markModified('redScore');\n        res.save();\n        socket.nsp.in(data.roomID).emit('updateRedScore', {redScore: res.redScore});\n      }\n    );\n  });\n\n  socket.on('blueScoreChange', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (err) return;\n      res.blueScore =  data.blueScore;\n      res.markModified('blueScore');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateBlueScore', {blueScore: res.blueScore});\n      }\n    );\n  });\n\n  socket.on('flipCard', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (err) return;\n      res.clicked[data.index] = true;\n      res.isRedTurn = data.isRedTurn;\n      res.markModified('clicked', 'isRedTurn');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateFlipCard', {isRedTurn: res.isRedTurn, clicked: res.clicked});\n    });\n  });\n\n  socket.on('updateTurn', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (err) return;\n      res.isRedTurn = data.redTurn;\n      res.markModified('isRedTurn');\n      res.save();\n      socket.nsp.in(data.roomID).emit('redTurn', {redTurn: res.isRedTurn});\n    });\n  });\n\n  socket.on('startTimer', (data) => {\n    Rooms.findOne({roomID: data.roomID},function(err, res) {\n      if (err) return;\n      if (data.currentTimer) {\n        clearInterval(data.currentTimer);\n      }\n\n      let time = 20;\n      const currentTimer = setInterval(() => {\n        if (time === 1) {\n          res.isRedTurn = (!res.isRedTurn);\n          res.markModified('isRedTurn');\n          res.save();\n          clearInterval(currentTimer);\n          socket.nsp.in(data.roomID).emit('redTurn', {redTurn: res.isRedTurn});\n          socket.nsp.in(data.roomID).emit('timerDone', {roomID: res.roomID});\n        }\n        time--;\n        socket.nsp.in(data.roomID).emit('timer', {time:time, currentTimer: Number(currentTimer)});\n      }, 1000);\n    });\n  });\n\n  socket.on('gameOver', (data) => {\n    Rooms.findOne({roomID: data.roomID}, function(err, res) {\n      if (err) return;\n      clearInterval(data.timerID);\n      res.totalGameScore = data.gameScore;\n      res.gameOver = data.gameOver;\n      res.redScore = data.redScore;\n      res.blueScore = data.blueScore;\n      res.markModified('gameScore', 'gameOver', 'redScore', 'blueScore');\n      res.save();\n      socket.nsp.in(data.roomID).emit('updateGameOver', res);\n    });\n  });\n\n  socket.on('hostStartGame', (data) => {\n    const colorSorted = colors.sort(() => Math.random() - 0.5);\n    const words = getWords();\n    const clicked = new Array(25).fill(false);\n    socket.roomID = data.roomID;\n    Rooms.findOneAndUpdate({roomID: data.roomID}, {$set : {colors: colorSorted, words: words, clicked: clicked, isRedTurn: true, redScore: 8, blueScore: 8, gameOver: false, hints:[]}},\n      {upsert:true, new:true}, function(err, res) {\n        if (err) return;\n        socket.nsp.in(data.roomID).emit('startGame', res);\n    })\n  });\n\n  socket.on('disconnect', () => {\n    setTimeout(() => {\n      if (socket.userID && socket.roomID){\n        console.log('triggered');\n        Rooms.findOne({roomID: socket.roomID}, function(err, res) {\n          if (err) return;\n          const foundUser = res.users.find(user => user.userID === socket.userID);\n          const foundUserIdx = res.users.indexOf(foundUser);\n\n          if(foundUser.socketId === socket.id) {\n            const users = res.users;\n            users.splice(foundUserIdx, 1);\n            res.users = users;\n            res.markModified('users');\n            res.save();\n            if(res && res.users.length === 0) {\n              console.log('no users left', socket.roomID);\n              Rooms.findOneAndDelete({roomID: socket.roomID}, function(err, res) {\n                if (err) return;\n                console.log(\"Room deleted!\", res);\n              });\n            }\n          }\n        });\n      }\n    }, 5000);\n  });\n});\n\n// Handle React routing, return all requests to React app\n  app.get('/*', function(req, res) {\n    res.sendFile(path.join(__dirname, '../client/build', 'index.html'));\n  });\n\nserver.listen(port, () =>\n    console.log(`Example app listening on port ${port}!`),\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610425063458
  },
  "{\"sourceRoot\":\"/Users/scottso/protect-ya-neck/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/scottso/protect-ya-neck\",\"filename\":\"/Users/scottso/protect-ya-neck/models/Rooms.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/scottso/protect-ya-neck\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/scottso/protect-ya-neck/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/scottso/protect-ya-neck",
      "filename": "/Users/scottso/protect-ya-neck/models/Rooms.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/scottso/protect-ya-neck",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/scottso/protect-ya-neck/models/Rooms.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/scottso/protect-ya-neck/models/Rooms.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/scottso/protect-ya-neck/models/",
        "sourceFileName": "Rooms.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require(\"../database\");\n\nvar _require = require(\"../database\"),\n    Schema = _require.Schema;\n/*\n roomMap: {\n  roomID: {\n    colors: String[],\n    words: String[],\n    clicked: Boolean[],\n    isRedTurn: Boolean,\n    totalGameScore: [int, int],\n    redScore: int\n    blueScore: int,\n    redSpy: String,\n    blueSpy: String,\n    users: {\n      userID[]: {\n      team: String,\n      role: String,\n      isHost: Boolean,\n      }\n    }\n  }\n }\n*/\n\n\nvar RoomSchema = new mongoose.Schema({\n  roomID: String,\n  colors: Array,\n  words: Array,\n  clicked: Array,\n  isRedTurn: Boolean,\n  gameOver: Boolean,\n  totalGameScore: Array,\n  redScore: Number,\n  blueScore: Number,\n  redSpy: String,\n  blueSpy: String,\n  users: Array,\n  hints: [{\n    hint: String,\n    hintCount: Number\n  }]\n}, {\n  versionKey: false\n});\nvar Rooms = mongoose.model(\"Rooms\", RoomSchema);\nmodule.exports = Rooms;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvb21zLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsIlJvb21TY2hlbWEiLCJyb29tSUQiLCJTdHJpbmciLCJjb2xvcnMiLCJBcnJheSIsIndvcmRzIiwiY2xpY2tlZCIsImlzUmVkVHVybiIsIkJvb2xlYW4iLCJnYW1lT3ZlciIsInRvdGFsR2FtZVNjb3JlIiwicmVkU2NvcmUiLCJOdW1iZXIiLCJibHVlU2NvcmUiLCJyZWRTcHkiLCJibHVlU3B5IiwidXNlcnMiLCJoaW50cyIsImhpbnQiLCJoaW50Q291bnQiLCJ2ZXJzaW9uS2V5IiwiUm9vbXMiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7ZUFDbUJBLE9BQU8sQ0FBQyxhQUFELEM7SUFBbEJDLE0sWUFBQUEsTTtBQUVSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxJQUFNQyxVQUFVLEdBQUcsSUFBSUgsUUFBUSxDQUFDRSxNQUFiLENBQW9CO0FBQ2pDRSxFQUFBQSxNQUFNLEVBQUVDLE1BRHlCO0FBRWpDQyxFQUFBQSxNQUFNLEVBQUNDLEtBRjBCO0FBR2pDQyxFQUFBQSxLQUFLLEVBQUVELEtBSDBCO0FBSWpDRSxFQUFBQSxPQUFPLEVBQUVGLEtBSndCO0FBS2pDRyxFQUFBQSxTQUFTLEVBQUVDLE9BTHNCO0FBTWpDQyxFQUFBQSxRQUFRLEVBQUVELE9BTnVCO0FBT2pDRSxFQUFBQSxjQUFjLEVBQUVOLEtBUGlCO0FBUWpDTyxFQUFBQSxRQUFRLEVBQUVDLE1BUnVCO0FBU2pDQyxFQUFBQSxTQUFTLEVBQUVELE1BVHNCO0FBVWpDRSxFQUFBQSxNQUFNLEVBQUVaLE1BVnlCO0FBV2pDYSxFQUFBQSxPQUFPLEVBQUViLE1BWHdCO0FBWWpDYyxFQUFBQSxLQUFLLEVBQUVaLEtBWjBCO0FBYWpDYSxFQUFBQSxLQUFLLEVBQUUsQ0FDTjtBQUFDQyxJQUFBQSxJQUFJLEVBQUVoQixNQUFQO0FBQ0NpQixJQUFBQSxTQUFTLEVBQUVQO0FBRFosR0FETTtBQWIwQixDQUFwQixFQWlCYjtBQUNBUSxFQUFBQSxVQUFVLEVBQUU7QUFEWixDQWpCYSxDQUFuQjtBQXFCQSxJQUFNQyxLQUFLLEdBQUd4QixRQUFRLENBQUN5QixLQUFULENBQWUsT0FBZixFQUF3QnRCLFVBQXhCLENBQWQ7QUFDQXVCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsS0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Njb3R0c28vcHJvdGVjdC15YS1uZWNrL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCIuLi9kYXRhYmFzZVwiKTtcbmNvbnN0IHsgU2NoZW1hIH0gPSByZXF1aXJlKFwiLi4vZGF0YWJhc2VcIik7XG5cbi8qXG4gcm9vbU1hcDoge1xuICByb29tSUQ6IHtcbiAgICBjb2xvcnM6IFN0cmluZ1tdLFxuICAgIHdvcmRzOiBTdHJpbmdbXSxcbiAgICBjbGlja2VkOiBCb29sZWFuW10sXG4gICAgaXNSZWRUdXJuOiBCb29sZWFuLFxuICAgIHRvdGFsR2FtZVNjb3JlOiBbaW50LCBpbnRdLFxuICAgIHJlZFNjb3JlOiBpbnRcbiAgICBibHVlU2NvcmU6IGludCxcbiAgICByZWRTcHk6IFN0cmluZyxcbiAgICBibHVlU3B5OiBTdHJpbmcsXG4gICAgdXNlcnM6IHtcbiAgICAgIHVzZXJJRFtdOiB7XG4gICAgICB0ZWFtOiBTdHJpbmcsXG4gICAgICByb2xlOiBTdHJpbmcsXG4gICAgICBpc0hvc3Q6IEJvb2xlYW4sXG4gICAgICB9XG4gICAgfVxuICB9XG4gfVxuKi9cbmNvbnN0IFJvb21TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICAgIHJvb21JRDogU3RyaW5nLFxuICAgICAgY29sb3JzOkFycmF5LFxuICAgICAgd29yZHM6IEFycmF5LFxuICAgICAgY2xpY2tlZDogQXJyYXksXG4gICAgICBpc1JlZFR1cm46IEJvb2xlYW4sXG4gICAgICBnYW1lT3ZlcjogQm9vbGVhbixcbiAgICAgIHRvdGFsR2FtZVNjb3JlOiBBcnJheSxcbiAgICAgIHJlZFNjb3JlOiBOdW1iZXIsXG4gICAgICBibHVlU2NvcmU6IE51bWJlcixcbiAgICAgIHJlZFNweTogU3RyaW5nLFxuICAgICAgYmx1ZVNweTogU3RyaW5nLFxuICAgICAgdXNlcnM6IEFycmF5LFxuICAgICAgaGludHM6IFtcbiAgICAgICB7aGludDogU3RyaW5nLFxuICAgICAgICBoaW50Q291bnQ6IE51bWJlclxuICAgICAgfV1cbiAgICB9LHtcbiAgICAgIHZlcnNpb25LZXk6IGZhbHNlXG4gICAgfSk7XG5cbmNvbnN0IFJvb21zID0gbW9uZ29vc2UubW9kZWwoXCJSb29tc1wiLCBSb29tU2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzID0gUm9vbXM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Rooms.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "RoomSchema",
        "roomID",
        "String",
        "colors",
        "Array",
        "words",
        "clicked",
        "isRedTurn",
        "Boolean",
        "gameOver",
        "totalGameScore",
        "redScore",
        "Number",
        "blueScore",
        "redSpy",
        "blueSpy",
        "users",
        "hints",
        "hint",
        "hintCount",
        "versionKey",
        "Rooms",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;eACmBA,OAAO,CAAC,aAAD,C;IAAlBC,M,YAAAA,M;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,UAAU,GAAG,IAAIH,QAAQ,CAACE,MAAb,CAAoB;AACjCE,EAAAA,MAAM,EAAEC,MADyB;AAEjCC,EAAAA,MAAM,EAACC,KAF0B;AAGjCC,EAAAA,KAAK,EAAED,KAH0B;AAIjCE,EAAAA,OAAO,EAAEF,KAJwB;AAKjCG,EAAAA,SAAS,EAAEC,OALsB;AAMjCC,EAAAA,QAAQ,EAAED,OANuB;AAOjCE,EAAAA,cAAc,EAAEN,KAPiB;AAQjCO,EAAAA,QAAQ,EAAEC,MARuB;AASjCC,EAAAA,SAAS,EAAED,MATsB;AAUjCE,EAAAA,MAAM,EAAEZ,MAVyB;AAWjCa,EAAAA,OAAO,EAAEb,MAXwB;AAYjCc,EAAAA,KAAK,EAAEZ,KAZ0B;AAajCa,EAAAA,KAAK,EAAE,CACN;AAACC,IAAAA,IAAI,EAAEhB,MAAP;AACCiB,IAAAA,SAAS,EAAEP;AADZ,GADM;AAb0B,CAApB,EAiBb;AACAQ,EAAAA,UAAU,EAAE;AADZ,CAjBa,CAAnB;AAqBA,IAAMC,KAAK,GAAGxB,QAAQ,CAACyB,KAAT,CAAe,OAAf,EAAwBtB,UAAxB,CAAd;AACAuB,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "/Users/scottso/protect-ya-neck/models/",
      "sourcesContent": [
        "const mongoose = require(\"../database\");\nconst { Schema } = require(\"../database\");\n\n/*\n roomMap: {\n  roomID: {\n    colors: String[],\n    words: String[],\n    clicked: Boolean[],\n    isRedTurn: Boolean,\n    totalGameScore: [int, int],\n    redScore: int\n    blueScore: int,\n    redSpy: String,\n    blueSpy: String,\n    users: {\n      userID[]: {\n      team: String,\n      role: String,\n      isHost: Boolean,\n      }\n    }\n  }\n }\n*/\nconst RoomSchema = new mongoose.Schema({\n      roomID: String,\n      colors:Array,\n      words: Array,\n      clicked: Array,\n      isRedTurn: Boolean,\n      gameOver: Boolean,\n      totalGameScore: Array,\n      redScore: Number,\n      blueScore: Number,\n      redSpy: String,\n      blueSpy: String,\n      users: Array,\n      hints: [\n       {hint: String,\n        hintCount: Number\n      }]\n    },{\n      versionKey: false\n    });\n\nconst Rooms = mongoose.model(\"Rooms\", RoomSchema);\nmodule.exports = Rooms;"
      ]
    },
    "sourceType": "script",
    "mtime": 1609607919329
  },
  "{\"sourceRoot\":\"/Users/scottso/protect-ya-neck/database/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/scottso/protect-ya-neck\",\"filename\":\"/Users/scottso/protect-ya-neck/database/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/scottso/protect-ya-neck\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/scottso/protect-ya-neck/database/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/scottso/protect-ya-neck",
      "filename": "/Users/scottso/protect-ya-neck/database/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/scottso/protect-ya-neck",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/scottso/protect-ya-neck/database/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/scottso/protect-ya-neck/database/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/scottso/protect-ya-neck/database/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar uri = 'mongodb+srv://protectyaneck:codenames123@cluster0.z0kxq.mongodb.net/roomDB';\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n}).then(function () {\n  console.log(\"MongoDB Connected…\");\n})[\"catch\"](function (err) {\n  return console.log(err);\n});\nvar database = mongoose;\nmodule.exports = database;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJkYXRhYmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsNEVBQVo7QUFFQUYsUUFBUSxDQUFDRyxPQUFULENBQWlCRCxHQUFqQixFQUFzQjtBQUNwQkUsRUFBQUEsZUFBZSxFQUFFLElBREc7QUFFcEJDLEVBQUFBLGtCQUFrQixFQUFFLElBRkE7QUFHcEJDLEVBQUFBLGdCQUFnQixFQUFFO0FBSEUsQ0FBdEIsRUFLQ0MsSUFMRCxDQUtNLFlBQU07QUFDVkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDRCxDQVBELFdBUU8sVUFBQUMsR0FBRztBQUFBLFNBQUlGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxHQUFaLENBQUo7QUFBQSxDQVJWO0FBVUEsSUFBTUMsUUFBUSxHQUFHWCxRQUFqQjtBQUVBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zY290dHNvL3Byb3RlY3QteWEtbmVjay9kYXRhYmFzZS8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5cbmNvbnN0IHVyaSA9ICdtb25nb2RiK3NydjovL3Byb3RlY3R5YW5lY2s6Y29kZW5hbWVzMTIzQGNsdXN0ZXIwLnowa3hxLm1vbmdvZGIubmV0L3Jvb21EQic7XG5cbm1vbmdvb3NlLmNvbm5lY3QodXJpLCB7XG4gIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZVxufSlcbi50aGVuKCgpID0+IHtcbiAgY29uc29sZS5sb2coXCJNb25nb0RCIENvbm5lY3RlZOKAplwiKVxufSlcbi5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcblxuY29uc3QgZGF0YWJhc2UgPSBtb25nb29zZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYXRhYmFzZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "uri",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "then",
        "console",
        "log",
        "err",
        "database",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,GAAG,GAAG,4EAAZ;AAEAF,QAAQ,CAACG,OAAT,CAAiBD,GAAjB,EAAsB;AACpBE,EAAAA,eAAe,EAAE,IADG;AAEpBC,EAAAA,kBAAkB,EAAE,IAFA;AAGpBC,EAAAA,gBAAgB,EAAE;AAHE,CAAtB,EAKCC,IALD,CAKM,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,CAPD,WAQO,UAAAC,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,CARV;AAUA,IAAMC,QAAQ,GAAGX,QAAjB;AAEAY,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/Users/scottso/protect-ya-neck/database/",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\nconst uri = 'mongodb+srv://protectyaneck:codenames123@cluster0.z0kxq.mongodb.net/roomDB';\n\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n})\n.then(() => {\n  console.log(\"MongoDB Connected…\")\n})\n.catch(err => console.log(err))\n\nconst database = mongoose;\n\nmodule.exports = database;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609092905555
  },
  "{\"sourceRoot\":\"/Users/scottso/protect-ya-neck/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/scottso/protect-ya-neck\",\"filename\":\"/Users/scottso/protect-ya-neck/src/utils.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/scottso/protect-ya-neck\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/scottso/protect-ya-neck",
      "filename": "/Users/scottso/protect-ya-neck/src/utils.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/scottso/protect-ya-neck",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/scottso/protect-ya-neck/src/utils.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/scottso/protect-ya-neck/src/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shuffle = shuffle;\nexports.getWords = getWords;\nexports.newUser = void 0;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar fs = require(\"fs\");\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction getWords() {\n  var text = fs.readFileSync(__dirname + '/WORDS.txt', \"utf-8\");\n  var words = text.split(\"\\n\");\n  var shuffledArray = shuffle(words);\n  return shuffledArray.splice(0, 25);\n}\n\nvar newUser = function newUser(userID) {\n  var isHost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return _defineProperty({}, userID, {\n    team: null,\n    role: null,\n    host: isHost\n  });\n};\n\nexports.newUser = newUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInNodWZmbGUiLCJhcnJheSIsImN1cnJlbnRJbmRleCIsImxlbmd0aCIsInRlbXBvcmFyeVZhbHVlIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRXb3JkcyIsInRleHQiLCJyZWFkRmlsZVN5bmMiLCJfX2Rpcm5hbWUiLCJ3b3JkcyIsInNwbGl0Iiwic2h1ZmZsZWRBcnJheSIsInNwbGljZSIsIm5ld1VzZXIiLCJ1c2VySUQiLCJpc0hvc3QiLCJ0ZWFtIiwicm9sZSIsImhvc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFFTyxTQUFTQyxPQUFULENBQWlCQyxLQUFqQixFQUF3QjtBQUM3QixNQUFJQyxZQUFZLEdBQUdELEtBQUssQ0FBQ0UsTUFBekI7QUFBQSxNQUFpQ0MsY0FBakM7QUFBQSxNQUFpREMsV0FBakQsQ0FENkIsQ0FHN0I7O0FBQ0EsU0FBTyxNQUFNSCxZQUFiLEVBQTJCO0FBRXpCO0FBQ0FHLElBQUFBLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQk4sWUFBM0IsQ0FBZDtBQUNBQSxJQUFBQSxZQUFZLElBQUksQ0FBaEIsQ0FKeUIsQ0FNekI7O0FBQ0FFLElBQUFBLGNBQWMsR0FBR0gsS0FBSyxDQUFDQyxZQUFELENBQXRCO0FBQ0FELElBQUFBLEtBQUssQ0FBQ0MsWUFBRCxDQUFMLEdBQXNCRCxLQUFLLENBQUNJLFdBQUQsQ0FBM0I7QUFDQUosSUFBQUEsS0FBSyxDQUFDSSxXQUFELENBQUwsR0FBcUJELGNBQXJCO0FBQ0Q7O0FBRUQsU0FBT0gsS0FBUDtBQUNEOztBQUVNLFNBQVNRLFFBQVQsR0FBb0I7QUFDekIsTUFBTUMsSUFBSSxHQUFHWixFQUFFLENBQUNhLFlBQUgsQ0FBZ0JDLFNBQVMsR0FBRyxZQUE1QixFQUEwQyxPQUExQyxDQUFiO0FBQ0EsTUFBTUMsS0FBSyxHQUFHSCxJQUFJLENBQUNJLEtBQUwsQ0FBVyxJQUFYLENBQWQ7QUFDQSxNQUFNQyxhQUFhLEdBQUdmLE9BQU8sQ0FBQ2EsS0FBRCxDQUE3QjtBQUNBLFNBQU9FLGFBQWEsQ0FBQ0MsTUFBZCxDQUFxQixDQUFyQixFQUF1QixFQUF2QixDQUFQO0FBQ0Q7O0FBRU0sSUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0MsTUFBRCxFQUE0QjtBQUFBLE1BQW5CQyxNQUFtQix1RUFBVixLQUFVO0FBQ2pELDZCQUNHRCxNQURILEVBQ1k7QUFDUkUsSUFBQUEsSUFBSSxFQUFFLElBREU7QUFFUkMsSUFBQUEsSUFBSSxFQUFFLElBRkU7QUFHUkMsSUFBQUEsSUFBSSxFQUFFSDtBQUhFLEdBRFo7QUFPRCxDQVJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zY290dHNvL3Byb3RlY3QteWEtbmVjay9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGZzID0gcmVxdWlyZShcImZzXCIpO1xuXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnJheSkge1xuICB2YXIgY3VycmVudEluZGV4ID0gYXJyYXkubGVuZ3RoLCB0ZW1wb3JhcnlWYWx1ZSwgcmFuZG9tSW5kZXg7XG5cbiAgLy8gV2hpbGUgdGhlcmUgcmVtYWluIGVsZW1lbnRzIHRvIHNodWZmbGUuLi5cbiAgd2hpbGUgKDAgIT09IGN1cnJlbnRJbmRleCkge1xuXG4gICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW50Li4uXG4gICAgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjdXJyZW50SW5kZXgpO1xuICAgIGN1cnJlbnRJbmRleCAtPSAxO1xuXG4gICAgLy8gQW5kIHN3YXAgaXQgd2l0aCB0aGUgY3VycmVudCBlbGVtZW50LlxuICAgIHRlbXBvcmFyeVZhbHVlID0gYXJyYXlbY3VycmVudEluZGV4XTtcbiAgICBhcnJheVtjdXJyZW50SW5kZXhdID0gYXJyYXlbcmFuZG9tSW5kZXhdO1xuICAgIGFycmF5W3JhbmRvbUluZGV4XSA9IHRlbXBvcmFyeVZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0V29yZHMoKSB7XG4gIGNvbnN0IHRleHQgPSBmcy5yZWFkRmlsZVN5bmMoX19kaXJuYW1lICsgJy9XT1JEUy50eHQnLCBcInV0Zi04XCIpO1xuICBjb25zdCB3b3JkcyA9IHRleHQuc3BsaXQoXCJcXG5cIik7XG4gIGNvbnN0IHNodWZmbGVkQXJyYXkgPSBzaHVmZmxlKHdvcmRzKTtcbiAgcmV0dXJuIHNodWZmbGVkQXJyYXkuc3BsaWNlKDAsMjUpO1xufVxuXG5leHBvcnQgY29uc3QgbmV3VXNlciA9ICh1c2VySUQsIGlzSG9zdCA9IGZhbHNlKSA9PiB7XG4gIHJldHVybiB7XG4gICAgW3VzZXJJRF06IHtcbiAgICAgIHRlYW06IG51bGwsXG4gICAgICByb2xlOiBudWxsLFxuICAgICAgaG9zdDogaXNIb3N0LFxuICAgIH1cbiAgfTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "fs",
        "require",
        "shuffle",
        "array",
        "currentIndex",
        "length",
        "temporaryValue",
        "randomIndex",
        "Math",
        "floor",
        "random",
        "getWords",
        "text",
        "readFileSync",
        "__dirname",
        "words",
        "split",
        "shuffledArray",
        "splice",
        "newUser",
        "userID",
        "isHost",
        "team",
        "role",
        "host"
      ],
      "mappings": ";;;;;;;;;;;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MAAiCC,cAAjC;AAAA,MAAiDC,WAAjD,CAD6B,CAG7B;;AACA,SAAO,MAAMH,YAAb,EAA2B;AAEzB;AACAG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB,CAJyB,CAMzB;;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOH,KAAP;AACD;;AAEM,SAASQ,QAAT,GAAoB;AACzB,MAAMC,IAAI,GAAGZ,EAAE,CAACa,YAAH,CAAgBC,SAAS,GAAG,YAA5B,EAA0C,OAA1C,CAAb;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,CAAd;AACA,MAAMC,aAAa,GAAGf,OAAO,CAACa,KAAD,CAA7B;AACA,SAAOE,aAAa,CAACC,MAAd,CAAqB,CAArB,EAAuB,EAAvB,CAAP;AACD;;AAEM,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAA4B;AAAA,MAAnBC,MAAmB,uEAAV,KAAU;AACjD,6BACGD,MADH,EACY;AACRE,IAAAA,IAAI,EAAE,IADE;AAERC,IAAAA,IAAI,EAAE,IAFE;AAGRC,IAAAA,IAAI,EAAEH;AAHE,GADZ;AAOD,CARM",
      "sourceRoot": "/Users/scottso/protect-ya-neck/src/",
      "sourcesContent": [
        "var fs = require(\"fs\");\n\nexport function shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport function getWords() {\n  const text = fs.readFileSync(__dirname + '/WORDS.txt', \"utf-8\");\n  const words = text.split(\"\\n\");\n  const shuffledArray = shuffle(words);\n  return shuffledArray.splice(0,25);\n}\n\nexport const newUser = (userID, isHost = false) => {\n  return {\n    [userID]: {\n      team: null,\n      role: null,\n      host: isHost,\n    }\n  };\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1609196760441
  }
}