[{"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/index.js":"1","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/reportWebVitals.js":"2","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/app/App.js":"3","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Home.js":"4","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Room.js":"5","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Game.js":"6","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Card.js":"7"},{"size":504,"mtime":1608403674515,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608137761491,"results":"10","hashOfConfig":"9"},{"size":452,"mtime":1608407140141,"results":"11","hashOfConfig":"9"},{"size":888,"mtime":1608403674514,"results":"12","hashOfConfig":"9"},{"size":3368,"mtime":1608407212987,"results":"13","hashOfConfig":"9"},{"size":3332,"mtime":1608413089010,"results":"14","hashOfConfig":"9"},{"size":894,"mtime":1608413089009,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19ixx94",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/index.js",[],["33","34"],"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/reportWebVitals.js",[],"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/app/App.js",[],"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Home.js",[],"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Room.js",["35","36","37"],"import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nconst ENDPOINT = \"http://127.0.0.1:3001\";\nconst socket = socketIOClient(ENDPOINT);\n\n\nfunction Room(props) {\n  const [roomID, setRoomID] = useState('');\n  const [redTeam, setRedTeam] = useState([]);\n  const [blueTeam, setBlueTeam] = useState([]);\n  const [nullTeam, setNullTeam] = useState([]);\n  const history = useHistory();\n\n  const organizeUsers = users => {\n    const emptyRedTeam = [];\n    const emptyBlueTeam = [];\n    const emptyNullTeam = [];\n    Object.keys(users).forEach((userID) => {\n        if(users[userID].team === \"RED\") {\n          emptyRedTeam.push(userID);\n        } else if (users[userID].team === \"BLUE\") {\n          emptyBlueTeam.push(userID);\n        } else {\n          emptyNullTeam.push(userID);\n        }\n    });\n    setRedTeam(emptyRedTeam);\n    setBlueTeam(emptyBlueTeam);\n    setNullTeam(emptyNullTeam);\n  };\n\n  const handleSetRedTeamClick = event => {\n    socket.emit('setRedTeam', {roomID, userID: props.location.state.userID});\n  };\n\n  const handleSetBlueTeamClick = event => {\n    socket.emit('setBlueTeam', {roomID, userID: props.location.state.userID});\n  };\n\n  const startGame = () => {\n    axios.post('/start-game', {roomID}).then(\n      (response) => {\n        history.push(response.data.redirectUrl)},\n      (error) => {\n        console.log(error);\n      })\n  };\n\n  const style = {\n    columnStyle:{\n      margin:\"50px\",\n      height:\"auto\",\n      width:\"200px\"\n    },\n    containerStyle:{\n      display:\"grid\",\n      position: \"absolute\",\n      left:\"20%\",\n      top:\"15%\",\n      gridGap: \"25px\",\n      gridTemplateColumns:\"1fr 1fr 1fr\"\n    },\n    teamButton:{\n      display:\"grid\",\n      position: \"absolute\",\n      left:\"25%\",\n      bottom:\"10%\",\n      gridGap: \"250px\",\n      gridTemplateColumns:\"1fr 1fr 1fr\"\n    }\n  }\n\n  useEffect(() => {\n    setRoomID(props.match.params.roomID);\n    socket.emit('joinRoom', {roomID: props.match.params.roomID, userID: props.location.state.userID });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, \"\");\n\n  useEffect(() => {\n    socket.on('updateTeams', (users) => {\n      organizeUsers(users);\n    });\n  }, [nullTeam, redTeam, blueTeam]);\n\n  return (\n    <>\n      <h1>Current Room: {roomID}</h1>\n      <div className=\"teamChooseContainer\" style={style.containerStyle}>\n        <div className=\"redColumn\" style={style.columnStyle}>\n          <h1>Red Team</h1>\n          {redTeam.map((user, i) => {\n            return (<li key={i}>{user}</li>);\n          })}\n        </div>\n      <div className=\"mainColumn\" style={style.columnStyle}>\n        <h1>Pick Team</h1>\n        {nullTeam.map((user, i) => {\n          return (<li key={i}>{user}</li>);\n        })}\n      </div>\n      <div className=\"blueColumn\" style={style.columnStyle}>\n        <h1>Blue Team</h1>\n        {blueTeam.map((user, i) => {\n          return (<li key={i}>{user}</li>);\n        })}\n      </div>\n      </div>\n      <div className=\"pickTeamButtons\" style={style.teamButton}>\n      <button value=\"red\" onClick={handleSetRedTeamClick}>Red Team</button>\n      <button onClick={startGame}>Start Game</button>\n      <button value=\"blue\" onClick={handleSetBlueTeamClick}>Blue Team</button>\n      </div>\n    </>\n  );\n}\n\nexport default Room;","/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Game.js",["38","39","40","41"],"/Users/jeffso/Desktop/Coderrr/protect-ya-neck/client/src/component/Card.js",["42","43","44","45","46"],"import React, { useState, useEffect } from \"react\";\n\nfunction Card(props) {\n  const [cardColor, setCardColor] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const user = {\n    name: \"\",\n    role: \"\",\n    teamColor: \"red\"\n  };\n  const colors = [\"red\", \"blue\", \"white\", \"black\"];\n  const random = Math.floor(Math.random() * colors.length);\n  \n  useEffect(() => {\n    if (user.role == \"codemaster\") {\n      setVisible(true);\n    }\n  })\n\n  const cardStyle = {\n    backgroundColor: visible ? props.color : \"white\",\n    width:\"90px\"\n  }\n\n  const handleClick = () => {\n    setVisible(true);\n    if (user.teamColor == cardColor) {\n      setScore(score + 1);\n    }\n  }\n\n  return (\n    <div className=\"card-container\" style={cardStyle} onClick={handleClick}>\n      <h1>\n        {props.word}\n      </h1>\n    </div>\n  );\n}\n\nexport default Card;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":44},{"ruleId":"55","severity":1,"message":"56","line":82,"column":6,"nodeType":"57","endLine":82,"endColumn":8},{"ruleId":"55","severity":1,"message":"58","line":82,"column":6,"nodeType":"57","endLine":82,"endColumn":8,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"60","line":14,"column":9,"nodeType":"53","messageId":"54","endLine":14,"endColumn":18},{"ruleId":"51","severity":1,"message":"61","line":15,"column":9,"nodeType":"53","messageId":"54","endLine":15,"endColumn":18},{"ruleId":"51","severity":1,"message":"62","line":16,"column":9,"nodeType":"53","messageId":"54","endLine":16,"endColumn":18},{"ruleId":"51","severity":1,"message":"63","line":17,"column":9,"nodeType":"53","messageId":"54","endLine":17,"endColumn":18},{"ruleId":"51","severity":1,"message":"64","line":4,"column":21,"nodeType":"53","messageId":"54","endLine":4,"endColumn":33},{"ruleId":"51","severity":1,"message":"65","line":14,"column":9,"nodeType":"53","messageId":"54","endLine":14,"endColumn":15},{"ruleId":"55","severity":1,"message":"66","line":16,"column":3,"nodeType":"53","endLine":16,"endColumn":12,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":17,"column":19,"nodeType":"70","messageId":"71","endLine":17,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":29,"column":24,"nodeType":"70","messageId":"71","endLine":29,"endColumn":26},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Literal","React Hook useEffect has missing dependencies: 'props.location.state.userID' and 'props.match.params.roomID'. Either include them or remove the dependency array. If 'setRoomID' needs the current value of 'props.match.params.roomID', you can also switch to useReducer instead of useState and read 'props.match.params.roomID' in the reducer.",["74"],"'rowColor1' is assigned a value but never used.","'rowColor2' is assigned a value but never used.","'rowColor3' is assigned a value but never used.","'rowColor4' is assigned a value but never used.","'setCardColor' is assigned a value but never used.","'random' is assigned a value but never used.","React Hook useEffect contains a call to 'setVisible'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.role] as a second argument to the useEffect Hook.",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [props.location.state.userID, props.match.params.roomID]",{"range":"80","text":"81"},"Add dependencies array: [user.role]",{"range":"82","text":"83"},[2170,2172],"[props.location.state.userID, props.match.params.roomID]",[493,493],", [user.role]"]